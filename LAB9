 #include <iostream>
#include <cmath>
using namespace std;

int multiply(int a, int b) {
    if (b == 0) return 0;
    if (b > 0) return a + multiply(a, b - 1);
    return -multiply(a, -b);
}

int factorial(int n) {
    if (n == 0) return 1;
    return n * factorial(n - 1);
}

int fibonacci(int n) {
    if (n == 0) return 0;
    if (n == 1) return 1;
    return fibonacci(n - 1) + fibonacci(n - 2);
}

int sum(int n) {
    if (n == 0) return 0;
    return n + sum(n - 1);
}

void printDescending(int n) {
    if (n == 0) return;
    cout << n << " ";
    printDescending(n - 1);
}

int count(int n) {
    if (n == 0) return 0;
    return 1 + count(n / 10);
}

int sum(int n) {
    if (n == 0) return 0;
    return (n % 10) + sum(n / 10);
}

int power(int x, int y) {
    if (y == 0) return 1;
    return x * power(x, y - 1);
}

int reverse(int n, int rev = 0) {
    if (n == 0) return rev;
    return reverse(n / 10, rev * 10 + n % 10);
}

bool isPalindrome(int n) {
    return n == reverse(n);
}

bool isPrimeHelper(int n, int i) {
    if (i > sqrt(n)) return true;
    if (n % i == 0) return false;
    return isPrimeHelper(n, i + 1);
}

bool isPrime(int n) {
    if (n <= 1) return false;
    return isPrimeHelper(n, 2);
}

void towerOfHanoi(int n, char source, char auxiliary, char destination) {
    if (n == 1) {
        cout << "Move disk 1 from " << source << " to " << destination << endl;
        return;
    }
    towerOfHanoi(n - 1, source, destination, auxiliary);
    cout << "Move disk " << n << " from " << source << " to " << destination << endl;
    towerOfHanoi(n - 1, auxiliary, source, destination);
}

int main() {
    cout << "Problem 1: " << multiply(4, 2) << endl;
    // cout << "Problem 2: " << factorial(5) << endl;
    // cout << "Problem 3: " << fibonacci(6) << endl;
    // cout << "Problem 4: " << sum(5) << endl;
    //
    // cout << "Problem 5: ";
    // printDescending(5);
    // cout << endl;
    //
    // cout << "Problem 6: " << count(12345) << endl;
    // cout << "Problem 7: " << sum(123) << endl;
    // cout << "Problem 8: " << power(2, 3) << endl;
    // cout << "Problem 9: " << reverse(1234) << endl;
    //
    // cout << "Problem 10: " << boolalpha << isPalindrome(121) << endl;
    // cout << "Problem 11: " << boolalpha << isPrime(17) << endl;
    //
    // cout << "Problem 12:" << endl;
    // towerOfHanoi(3, 'A', 'B', 'C');
    
    return 0;
}
